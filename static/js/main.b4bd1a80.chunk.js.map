{"version":3,"sources":["InputElements.js","Label.js","ResultItem.js","Button.js","Result.js","ContactForm.js","index.js"],"names":["InputElements","props","type","id","name","placeholder","title","required","pattern","minLength","minlength","maxLength","maxlength","onChange","value","Label","htmlFor","for","display","ResultItem","className","labelDisplay","Button","this","onClick","React","Component","Result","resultItems","items","forEach","item","index","push","label","key","onEdit","ContactForm","state","email","password","address","number","resultData","showResult","showForm","document","event","nativeEvent","srcElement","target","setState","persist","clickEvent","contact","checkValidity","preventDefault","getFieldChangeValues","bind","onAddressChange","onSubmit","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b4bd1a80.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction InputElements(props) {\r\n    return <input type={props.type}\r\n        id={props.id}\r\n        name={props.name}\r\n        placeholder={props.placeholder}\r\n        title={props.title}\r\n        required\r\n        pattern={props.pattern}\r\n        minLength={props.minlength}\r\n        maxLength={props.maxlength}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n    ></input>\r\n  }\r\n\r\n\r\nexport default InputElements;\r\n","import React from 'react';\r\n\r\nfunction Label(props) {\r\n    return <label htmlFor={props.for}>{props.display}</label>\r\n}\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\n\r\nfunction ResultItem(props) {\r\n    return <div className=\"item\">\r\n        <span className=\"label\">{props.labelDisplay}: </span>\r\n        <span id=\"value\">{props.value}</span>\r\n    </div>\r\n}\r\nexport default ResultItem;","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        return <button className=\"button\" id={this.props.id} onClick={this.props.onClick}>{this.props.display}</button>\r\n    }\r\n}\r\nexport default Button;","import React from 'react';\r\nimport ResultItem from \"./ResultItem\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Result(props) {\r\n    const resultItems = [];\r\n    props.items.forEach((item,index) =>{\r\n        resultItems.push(\r\n            <ResultItem\r\n                labelDisplay={item.label}\r\n                value={item.value}\r\n                key={index}\r\n            />\r\n        );\r\n    });\r\n    return <div className=\"result\" id=\"result\">\r\n        {resultItems}\r\n        <Button id=\"edit\" display=\"EDIT\" onClick={props.onEdit}/>\r\n    </div>\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\nimport './ContactForm.css';\nimport InputElements from \"./InputElements\";\nimport Label from \"./Label\";\nimport Result from \"./Result\";\nimport Button from \"./Button\";\n\nclass ContactForm extends React.Component {\n  constructor() {\n    super();\n    this.state={\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\",\n        number: \"\",\n        resultData: [],\n        showResult: false,\n        showForm: true\n    }\n  }\n  componentDidMount() {\n    document.title = \"Contact Form\";\n  }\n\n  getFieldChangeValues(event) {\n    const id = event.nativeEvent.srcElement.id;\n    const value = event.target.value;\n    if(id === \"name\") {\n      this.setState({\n        name: value\n      });\n    } else if(id === \"email\") {\n      this.setState({\n        email: value\n      });\n    } else if(id === \"password\") {\n      this.setState({\n        password: value\n      });\n    } else if(id === \"number\") {\n      this.setState({\n        number: value\n      });\n    }\n  }\n\n  onAddressChange(event) {\n    event.persist();\n    this.setState({\n      address: event.target.value\n    })\n  }\n\n  onSubmit(clickEvent) {\n    if(document.contact.checkValidity()) {\n      clickEvent.preventDefault();\n      this.setState({\n        resultData: [\n          {\n            label: \"Name\",\n            value: this.state.name\n          },\n          {\n            label: \"Email\",\n            value: this.state.email\n          },\n          {\n            label: \"Password\",\n            value: this.state.password\n          },\n          {\n            label: \"Address\",\n            value: this.state.address\n          },\n          {\n            label: \"Phone number\",\n            value: this.state.number\n          }\n        ],\n        showResult: true,\n        showForm: false\n      });\n    }\n  }\n\n  onEdit() {\n    this.setState({\n      showForm: true,\n      showResult: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Contact\">\n        <h2 className = \"title\">CONTACT FORM</h2>\n        <div className = \"container\">\n          {\n            this.state.showForm ? \n              <div className = \"contact-form\" id=\"contactform\">\n                  <form name=\"contact\" id=\"form\">\n                      <Label for=\"name\" display=\"Name\"/>\n                      <InputElements\n                        type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name goes here..\" title=\"Use only alphabets\" required pattern='[a-zA-Z ]+'\n                        onChange={this.getFieldChangeValues.bind(this)}\n                        value={this.state.name}\n                      />\n                      \n                      <Label for=\"email\" display=\"Email\"/>\n                      <InputElements\n                        type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email goes here..\" title=\"Enter valid email\" required\n                        onChange={this.getFieldChangeValues.bind(this)}\n                        value={this.state.email}\n                      />\n\n                      <Label for=\"password\" display=\"Password\"/>\n                      <InputElements\n                        type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password goes here..\" title=\"Please enter more than 8 characters\" minlength=\"8\" maxlength=\"30\" required\n                        onChange={this.getFieldChangeValues.bind(this)}\n                        value={this.state.password}\n                        />\n\n                      <Label for=\"address\" display=\"Address\"/>\n                      <textarea className=\"textarea\" id=\"address\" name=\"address\" placeholder=\"Address..\" pattern='[a-zA-Z0-9]+' required onChange={this.onAddressChange.bind(this)}\n                      value={this.state.address}\n                      />\n\n                      <Label for=\"number\" display=\"Mobile Number\"/>\n                      <InputElements\n                        type=\"tel\" id=\"number\" name=\"number\" placeholder=\"Number\" pattern=\"[0-9]{10}\" title=\"Enter 10 digit mobile number\" maxlength=\"10\" required\n                        onChange={this.getFieldChangeValues.bind(this)}\n                        value={this.state.number}\n                        />\n        \n                      <Button id=\"submit\" display=\"SUBMIT\" onClick={this.onSubmit.bind(this)}/>\n                  </form>\n              </div>\n              : null \n          }\n            {this.state.showResult ? <Result items={this.state.resultData} onEdit={this.onEdit.bind(this)}/> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default ContactForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './ContactForm.css';\nimport ContactForm from './ContactForm';\n\nReactDOM.render(<ContactForm />, document.getElementById('root'));\n"],"sourceRoot":""}